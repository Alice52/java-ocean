version: "2.2"
services:
  activemq:
    image: registry.cn-shanghai.aliyuncs.com/alice52/dev-activemq:20200412.3c824a8
    restart: "no"
    container_name: dev-activemq
    ports:
      - 8161:8161
      - 61613:61613
    volumes:
      - /root/activemq/data:/data/activemq
      - /root/activemq/logs:/var/log/activemq
    environment:
      TZ: Asia/Shanghai

  rabbitmq:
    image: rabbitmq:3.7.7-management
    restart: "no"
    container_name: dev-rabbitmq
    hostname: rabbit
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - /root/rabbitmq/data:/var/lib/rabbitmq
      - /root/rabbitmq/logs:/var/log/rabbitmq
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    environment:
      RABBITMQ_DEFAULT_VHOST: /
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      TZ: Asia/Shanghai

  nginx:
    image: registry.cn-shanghai.aliyuncs.com/alice52/dev-nginx:20200929.b7b0fc7
    restart: always
    container_name: dev-nginx
    ports:
      - 81:80
    volumes:
      - /root/nginx/www:/usr/share/nginx/html
      - /root/nginx/logs:/var/log/nginx
    environment:
      TZ: Asia/Shanghai

  zookepper:
    image: zookeeper:3.4.10
    restart: on-failure
    hostname: zoo1
    container_name: dev-zookeeper01
    #domainname:
    ports:
      - 2181:2181
    volumes:
      - /root/zookeeper/zoo1/data:/data
      - /root/zookeeper/zoo1/datalog:/datalog
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888

  consul:
    image: consul:1.6.1
    restart: "no"
    container_name: dev-consul
    volumes:
      - /root/consul/data:/consul/data
      - /root/consul/config:/consul/config
    ports:
      - 8500:8500
      - 8006:8006
    command: agent -server -bind=0.0.0.0 -client=0.0.0.0 -node=consul_Server1 -bootstrap-expect=1 -ui
    environment:
      TZ: Asia/Shanghai

  zipkin:
    image: openzipkin/zipkin:2.12.9
    restart: "no"
    container_name: dev-zipkin
    ports:
      - 9411:9411
    environment:
      TZ: Asia/Shanghai

  nacos:
    image: registry.cn-shanghai.aliyuncs.com/alice52/dev-nacos:20200412.8bcaddc
    container_name: dev-nacos-standalone
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
    volumes:
      - /root/nacos/standalone/logs/:/home/nacos/logs
    ports:
      - "8848:8848"

  sentinel:
    image: registry.cn-shanghai.aliyuncs.com/alice52/dev-sentinel:20200414.289f92f
    restart: on-failure
    container_name: dev-sentinel
    ports:
      - 8849:8080

  # seata-server:
  #   image: seataio/seata-server:1.0.0
  #   # hostname: seata-server
  #   restart: on-failure
  #   container_name: dev-seata
  #   ports:
  #     - "8091:8091"
  #   volumes:
  #     - /root/seata-server/resources/file.conf:/seata-server/resources/file.conf
  #     - /root/seata-server/resources/registry.conf:/seata-server/resources/registry.conf
  #   environment:
  #     - SEATA_PORT=8091

  mongodb:
    image: mongo:4.2
    restart: "on-failure:3"
    container_name: dev-mongodb
    ports:
      - 27017:27017
    volumes:
      #- /root/mongodb/configdb:/data/configdb/
      - /root/mongodb/logs:/var/log/mongodb
      - /root/mongodb/data/db/:/var/lib/mongodb
    command: mongod --auth
    environment:
      TZ: Asia/Shanghai
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}

  # use slave of host port as slave server
  redis:
    image: registry.cn-shanghai.aliyuncs.com/alice52/dev-standalone-redis:20200930.4e34876
    restart: "on-failure:3"
    container_name: dev-redis-standalone
    ports:
      - 6379:6379
    volumes:
      - /root/redis/standalone/data:/data
    environment:
      TZ: Asia/Shanghai

  mysql:
    image: registry.cn-shanghai.aliyuncs.com/alice52/dev-mysql:20200930.9da9260
    restart: "on-failure:3"
    container_name: dev-mysql
    ports:
      - 3306:3306
    volumes:
      #- /root/mysql/conf/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
      - /root/mysql/logs:/var/log/mysql
      - /root/mysql/data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: Asia/Shanghai

  elastic-search:
    image: registry.cn-shanghai.aliyuncs.com/alice52/dev-elastic-search:20200706.8d96ac1
    restart: "on-failure:3"
    container_name: dev-elastic-search
    ports:
      - 9200:9200
      - 9300:9300
    privileged: true
    user: "root"
    volumes:
      - elasticsearchdata:/usr/share/elasticsearch/data
    environment:
      discovery.type: single-node
      CUSTOM_DIC_NAME: custom.dic
      ES_JAVA_OPTS: "-Xms64m -Xmx256m"
      TZ: Asia/Shanghai
volumes:
  elasticsearchdata:
    driver: local

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    restart: "on-failure:3"
    container_name: dev-kibana
    environment:
      SERVER_NAME: kibana
      # https://www.elastic.co/guide/en/kibana/current/settings.html
      ELASTICSEARCH_HOSTS: http://49.235.91.10:9200
    ports:
      - 5601:5601

  jenkins:
    restart: always
    image: jenkinsci/jenkins
    container_name: jenkins
    ports:
      - 9090:8080
      # JNLP-based Jenkins agent communicates with Jenkins master over TCP port 50000
      - 50000:50000
    volumes:
      - /root/jenkins:/var/jenkins_home
    environment:
      TZ: Asia/Shanghai

  tomcat:
    image: tomcat:8.5.40
    restart: "no"
    container_name: dev-tomcat8
    ports:
      - 8001:8080
    volumes:
      - /root/tomcat/conf/:/usr/local/tomcat/conf
      - /root/tomcat/logs:/usr/local/tomcat/logs
      - /root/tomcat/webapps/:/usr/local/tomcat/webapps
    environment:
      TZ: Asia/Shanghai

  wso2is:
    image: wso2/wso2is:5.7.0
    restart: "no"
    container_name: dev-wso2is
    ports:
      - 9443:9443
    environment:
      TZ: Asia/Shanghai
