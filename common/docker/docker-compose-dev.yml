version: '2.2'
services:
  jenkins:
    restart: always
    image: jenkinsci/jenkins
    container_name: jenkins
    ports:
      - 9090:8080
      # JNLP-based Jenkins agent communicates with Jenkins master over TCP port 50000
      - 50000:50000
    volumes:
      - /root/jenkins:/var/jenkins_home
    environment:
      TZ: Asia/Shanghai

  zookepper:
    image: zookeeper:3.4.10
    restart: always
    hostname: zoo1
    container_name: dev-zookepper01
    #domainname:
    ports:
      - 2181:2181
    volumes:
      - /root/zookeeper/zoo1/data:/data
      - /root/zookeeper/zoo1/datalog:/datalog
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888

  nginx:
    image: nginx
    restart: always
    container_name: dev-nginx
    ports:
      - 80:80
    volumes:
      - /root/nginx/www:/usr/share/nginx/html
      - /root/nginx/conf/nginx.conf/nginx.conf:/etc/nginx/nginx.conf
      - /root/nginx/conf/conf.d:/etc/nginx/conf.d
      - /root/nginx/logs:/var/log/nginx
    environment:
      TZ: Asia/Shanghai

  mysql:
    image: mysql:5.7
    restart: always
    container_name: dev-mysql
    ports:
      - 3306:3306
    volumes:
      - /root/mysql/conf.d:/etc/mysql/conf.d
      - /root/mysql/logs:/var/log/mysql
      - /root/mysql/data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      TZ: Asia/Shanghai

  redis:
    image: registry.cn-shanghai.aliyuncs.com/alice52/dev-redis:5.0
    restart: always
    container_name: dev-redis
    ports:
      - 6379:6379
    volumes:
      - /root/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
      - /root/redis/logs/redis.log:/logs/redis.log
      - /root/redis/data:/data
    environment:
      TZ: Asia/Shanghai

  rabbitmq:
    image: rabbitmq:3.7.7-management
    restart: always
    container_name: dev-rabbitmq
    hostname: rabbit
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - /root/rabbitmq/data:/var/lib/rabbitmq
      - /root/rabbitmq/logs:/var/log/rabbitmq
    logging:
      driver: 'json-file'
      options:
        max-size: '200k'
        max-file: '10'
    environment:
      RABBITMQ_DEFAULT_VHOST: /
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      TZ: Asia/Shanghai

  activemq:
    image: webcenter/activemq
    restart: always
    container_name: dev-activemq
    ports:
      - 8161:8161
      - 61613:61613
    volumes:
      - /root/activemq/conf:/opt/activemq/conf
      - /root/activemq/data:/data/activemq
      - /root/activemq/logs:/var/log/activemq
    environment:
      TZ: Asia/Shanghai

  mongodb:
    image: mongodb
    restart: always
    container_name: dev-mongodb
    ports:
      - 27017:27017
    volumes:
      - /root/mongodb/configdb:/data/configdb/
      - /root/mongodb/logs:/var/log/mongodb
      - /root/mongodb/data/db/:/var/lib/mongodb
    environment:
      TZ: Asia/Shanghai

  tomcat:
    image: tomcat:8.5.40
    restart: always
    container_name: dev-tomcat8
    ports:
      - 8001:8080
    volumes:
      - /root/tomcat/conf/:/usr/local/tomcat/conf
      - /root/tomcat/logs:/usr/local/tomcat/logs
      - /root/tomcat/webapps/:/usr/local/tomcat/webapps
    environment:
      TZ: Asia/Shanghai

  wso2is:
    image: wso2/wso2is:5.7.0
    restart: always
    container_name: dev-wso2is
    ports:
      - 9443:9443
    environment:
      TZ: Asia/Shanghai

  consul:
    image: consul:1.6.1
    restart: 'no'
    container_name: dev-consul
    volumes:
      - /root/consul/data:/consul/data
      - /root/consul/config:/consul/config
    ports:
      - 8500:8500
    command: agent -server -bind=0.0.0.0 -client=0.0.0.0 -node=consul_Server1 -bootstrap-expect=1 -ui
    environment:
      TZ: Asia/Shanghai

  zipkin:
    image: openzipkin/zipkin:2.12.9
    restart: 'no'
    container_name: dev-zipkin
    ports:
      - 9411:9411
    environment:
      TZ: Asia/Shanghai

  nacos:
    image: registry.cn-shanghai.aliyuncs.com/alice52/dev-nacos:20200412.8bcaddc
    container_name: dev-nacos-standalone
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
    volumes:
      - /root/nacos/standalone/logs/:/home/nacos/logs
    ports:
      - '8848:8848'

  # nacos-server服务注册与发现，配置中心服务
  nacos-server-cluster:
    image: registry.cn-shanghai.aliyuncs.com/alice52/dev-nacos:20200412.8bcaddc
    container_name: nacos-server
    ports:
      - '8848:8848'
      - '9555:9555'
    # doonot use this for some error: page not find
    #networks:
    #  - 'nacos_net'
    restart: 'no'
    privileged: true
    environment:
      #如果支持主机名可以使用hostname,否则使用ip，默认也是ip
      PREFER_HOST_MODE: ip
      #数据源平台 仅支持mysql或不保存empty
      SPRING_DATASOURCE_PLATFORM: mysql
      #多网卡情况下，指定ip或网卡
      NACOS_SERVER_IP: 101.132.45.28
      #集群中其它节点[ip1:port ip2:port ip3:port]
      NACOS_SERVERS: 101.37.174.197:8848 101.132.45.28:8848 121.36.195.5:8848
      #mysql配置，Master为主节点，Slave为从节点
      MYSQL_MASTER_SERVICE_HOST: 101.132.45.28
      MYSQL_MASTER_SERVICE_PORT: 3306
      MYSQL_MASTER_SERVICE_DB_NAME: nacos_dev
      MYSQL_MASTER_SERVICE_USER: root
      MYSQL_MASTER_SERVICE_PASSWORD: Yu1252068782?
      # MYSQL_SLAVE_SERVICE_HOST: 101.37.174.197
      # MYSQL_SLAVE_SERVICE_PORT: 3306
      #JVM调优参数
      JVM_XMS: 512m # default 2g
      JVM_XMX: 512m # default :2g
      JVM_XMN: 512m # default :1g
      JVM_MS: 128m #default :128m
      JVM_MMS: 320m # default :320m
      #NACOS_DEBUG: n #是否开启远程debug，y/n，默认n
      #TOMCAT_ACCESSLOG_ENABLED: true #是否开始tomcat访问日志的记录，默认false
    volumes:
      - /root/nacos/cluster/logs:/home/nacos/logs
# doonot use this for some error: page not find
#networks:
#  nacos_net:
#    driver: bridge
