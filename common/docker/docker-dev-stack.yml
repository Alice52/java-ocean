version: '2.2'
services:
  services:
    portainer:
      restart: always
      image: portainer/portainer
      container_name: portainer
      ports:
        - 9000:9000
      environment:
        TZ: Asia/Shanghai
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - /root/portainer/data:/data docker.io/portainer/portainer
  jenkins:
    restart: always
    image: jenkinsci/jenkins
    container_name: jenkins
    ports:
      - 9090:8080
      # JNLP-based Jenkins agent communicates with Jenkins master over TCP port 50000
      - 50000:50000
    volumes:
      - /root/jenkins:/var/jenkins_home
    environment:
      TZ: Asia/Shanghai

  zookepper:
    image: zookeeper:3.4.10
    restart: always
    hostname: zoo1
    container_name: dev-zookepper01
    #domainname:
    ports:
      - 2181:2181
    volumes:
      - /root/zookeeper/zoo1/data:/data
      - /root/zookeeper/zoo1/datalog:/datalog
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888

  nginx:
    image: nginx
    restart: always
    container_name: dev-nginx
    ports:
      - 81:80
    volumes:
      - /root/nginx/www:/usr/share/nginx/html
      - /root/nginx/conf/nginx.conf/nginx.conf:/etc/nginx/nginx.conf
      - /root/nginx/conf/conf.d:/etc/nginx/conf.d
      - /root/nginx/logs:/var/log/nginx
    environment:
      TZ: Asia/Shanghai

  mysql:
    image: mysql:5.7
    restart: always
    container_name: dev-mysql
    ports:
      - 3306:3306
    volumes:
      - /root/mysql/conf.d:/etc/mysql/conf.d
      - /root/mysql/logs:/var/log/mysql
      - /root/mysql/data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: Yu1252068782?
      TZ: Asia/Shanghai

redis:
  image: redis:5.0
  restart: always
  container_name: dev-redis
  ports:
    - 6379:6379
  volumes:
    - /root/redis/data:/data
    - /root/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
    - /root/redis/log:/logs
  command:
    - redis-server /usr/local/etc/redis/redis.conf --appendonly yes
  environment:
    TZ: Asia/Shanghai

rabbitmq:
  image: rabbitmq:3.7.7-management
  restart: always
  container_name: dev-rabbitmq
  hostname: rabbit
  ports:
    - 15672:15672
    - 5672:5672
  volumes:
    - /root/rabbitmq/data:/var/lib/rabbitmq
    - /root/rabbitmq/logs:/var/log/rabbitmq
  logging:
    driver: 'json-file'
    options:
      max-size: '200k'
      max-file: '10'
  command:
    - redis-server /usr/local/etc/redis/redis.conf --appendonly yes
  environment:
    RABBITMQ_DEFAULT_VHOST: /
    RABBITMQ_DEFAULT_USER: guest
    RABBITMQ_DEFAULT_PASS: guest
    TZ: Asia/Shanghai

activemq:
  image: webcenter/activemq
  restart: always
  container_name: dev-activemq
  ports:
    - 8161:8161
    - 61613:61613
  volumes:
    - /root/activemq/conf:/opt/activemq/conf
    - /root/activemq/data:/data/activemq
    - /root/activemq/logs:/var/log/activemq
  environment:
    TZ: Asia/Shanghai

mongodb:
  image: mongodb
  restart: always
  container_name: dev-mongodb
  ports:
    - 27017:27017
  volumes:
    - /root/mongodb/configdb:/data/configdb/
    - /root/mongodb/logs:/var/log/mongodb
    - /root/mongodb/data/db/:/var/lib/mongodb
  environment:
    TZ: Asia/Shanghai

tomcat:
  image: tomcat:8.5.40
  restart: always
  container_name: dev-tomcat8
  ports:
    - 8001:8080
  volumes:
    - /root/tomcat/conf/:/usr/local/tomcat/conf
    - /root/tomcat/logs:/usr/local/tomcat/logs
    - /root/tomcat/webapps/:/usr/local/tomcat/webapps
  environment:
    TZ: Asia/Shanghai
